#!/usr/bin/env bash

hc() {
  herbstclient "$@"
}

hc emit_hook reload

xsetroot -solid '#000000' # Desktop background color

# Key bindings

# Remove all existing keybindings
hc keyunbind --all

# Mod1 = Alt, Mod4=Command/Window key
Mod=Mod4
myTerm=alacritty
myEditor=code
myBrowser=brave
myFiles=nautilus

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-q       close

# Application shortcuts
hc keybind $Mod-Return spawn $myTerm
hc keybind $Mod-e      spawn $myEditor
hc keybind $Mod-b      spawn $myBrowser
hc keybind $Mod-f      spawn $myFiles

# Audio controls
hc keybind XF86AudioRaiseVolume       spawn amixer set Master 3%+ unmute
hc keybind XF86AudioLowerVolume       spawn amixer set Master 3%- unmute
hc keybind Shift-XF86AudioRaiseVolume spawn amixer set Master 1%+ unmute
hc keybind Shift-XF86AudioLowerVolume spawn amixer set Master 1%- unmute
hc keybind XF86AudioMute              spawn amixer set Master toggle

# focusing clients
hc keybind $Mod-Left          focus left
hc keybind $Mod-Down          focus down
hc keybind $Mod-Up            focus up
hc keybind $Mod-Right         focus right
hc keybind $Mod-h             focus left
hc keybind $Mod-j             focus down
hc keybind $Mod-k             focus up
hc keybind $Mod-l             focus right
                              
# moving clients              
hc keybind $Mod-Shift-Left    shift left
hc keybind $Mod-Shift-Down    shift down
hc keybind $Mod-Shift-Up      shift up
hc keybind $Mod-Shift-Right   shift right
hc keybind $Mod-Shift-h       shift left
hc keybind $Mod-Shift-j       shift down
hc keybind $Mod-Shift-k       shift up
hc keybind $Mod-Shift-l       shift right

# splitting frames
hc keybind $Mod-u             split bottom  0.5
hc keybind $Mod-o             split right   0.5
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h      resize left  +$resizestep
hc keybind $Mod-Control-j      resize down  +$resizestep
hc keybind $Mod-Control-k      resize up    +$resizestep
hc keybind $Mod-Control-l      resize right +$resizestep
hc keybind $Mod-Control-Left   resize left  +$resizestep
hc keybind $Mod-Control-Down   resize down  +$resizestep
hc keybind $Mod-Control-Up     resize up    +$resizestep
hc keybind $Mod-Control-Right  resize right +$resizestep

# tags
tag_names=("www" "dev" "vbox" "chat" "game")
tag_keys=( {1..5} 0 )
hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layout
hc keybind $Mod-r       remove              # Remove the current frame
hc keybind $Mod-Shift-s floating   toggle
hc keybind $Mod-Shift-f fullscreen toggle
hc keybind $Mod-Shift-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-Shift-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c           cycle
hc keybind $Mod-i           jumpto urgent

# Rofi menus
hc keybind $Mod-space spawn rofi -show drun
hc keybind $Mod-a spawn rofi_audio_move_sink_input.py
hc keybind $Mod-v spawn rofi-virtualbox.sh 

 Theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#888888'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color     '#565656'
hc set frame_bg_active_color     '#345F0C'
hc set frame_border_width 1
hc set always_show_frame 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_padding 0
hc set focus_follow_mouse 1

hc attr theme.active.color '#9fbc00'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color orange
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 1
hc attr theme.floating.border_width 1
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '#141414'

hc set window_gap 8 
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0
hc set focus_crosses_monitor_boundaries 1
hc set swap_monitors_to_get_tag 1

# rules
hc unrule -F
hc rule focus=on # normally focus new clients
hc rule floatplacement=center

hc rule class='jetbrains-idea' title='New Project' floating=on 
hc rule class='jetbrains-toolbox' pseudotile=on 

# Move all VBox windows to tag 3
#hc rule class~'.*VirtualBox.*' tag=vbox 
#hc rule title='Oracle VM VirtualBox Manager' tag=vbox

#hc rule class=Slack tag=chat

hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# 
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors
#hc set_monitors 1920x1060+0+20 1920x1060+1920+20 1920x1060+3840+20

# Autostarts
lxsession &
picom &
nitrogen --restore &

#hc pad 0 27 0 0 0

# Polybar
{
  pids=( )
  $HOME/.config/polybar/launcher.sh
  pids+=( $! )
  hc -w '(quit_panel|reload)'
  kill ${pids[@]}
} &

